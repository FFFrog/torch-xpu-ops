name: pull

on:
  pull_request:
    branches:
      - main
      - release/*

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

permissions: read-all

jobs:
  preci-ut:
    # Don't run on forked repos
    if: github.repository_owner == 'intel'
    name: preci-ut
    runs-on: linux.idc.xpu
    timeout-minutes: 240
    steps:
      - name: Checkout torch-xpu-ops
        uses: actions/checkout@v3
      - name: Prepare Stock Pytorch
        run: |
          pwd
          cd ../ && rm -rf pytorch
          git clone -b nightly https://github.com/pytorch/pytorch
          cd pytorch && git log -n 1 && git submodule sync && git submodule update --init --recursive
          rm -rf third_party/torch-xpu-ops && cp -r ../torch-xpu-ops third_party/
          # Workaround for torch-xpu-ops ci test
          sed -i "s/checkout --quiet \${TORCH_XPU_OPS_COMMIT}/log -n 1/g" caffe2/CMakeLists.txt
      - name: Build Pytorch XPU
        run: |
          source activate xpu_op_${ZE_AFFINITY_MASK}
          conda install cmake ninja -y
          conda install intel::mkl-static intel::mkl-include -y
          cd ../pytorch
          pip install -r requirements.txt
          export USE_XPU=1
          source /opt/intel/oneapi/compiler/latest/env/vars.sh
          export CMAKE_PREFIX_PATH=${CONDA_PREFIX:-"$(dirname $(which conda))/../"}
          python setup.py bdist_wheel
          pip install --force-reinstall dist/*.whl
      - name: Run XPU OP UT
        if: ${{ hashFiles('test/xpu/') != '' }}
        run: |
          source /opt/intel/oneapi/compiler/latest/env/vars.sh
          source activate xpu_op_${ZE_AFFINITY_MASK}
          export PYTORCH_ENABLE_XPU_FALLBACK=1
          export PYTORCH_TEST_WITH_SLOW=1
          cd ../pytorch/third_party/torch-xpu-ops/test/xpu
          timeout 10000 python run_test.py 2>&1 | tee torch_xpu_ops_ut.log
